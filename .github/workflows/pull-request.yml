name: Backend Pull Request Checks
on:
  pull_request:
    branches:
      - dev
    paths:
      - 'backend/**'
jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key:
            ${{ runner.os }}-pip-${{ hashFiles('backend/app/requirements.txt')}}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        working-directory: backend/app
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install black isort flake8 mypy pytest
      - name: Check code formatting with Black
        working-directory: backend/app
        run: black --check --diff .
      - name: Check import sorting with isort
        working-directory: backend/app
        run: isort --check-only --diff .
      - name: Lint code with flake8
        working-directory: backend/app
        run: flake8 .
      - name: Type check with mypy
        working-directory: backend/app
        run: mypy .
      - name: Run unit tests
        working-directory: backend
        run: python -m pytest tests/unit -v --tb=short
  pr-comment:
    runs-on: ubuntu-latest
    needs: lint-and-test
    permissions:
      pull-requests: write
    if: success()
    steps:
      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '✅ Backend checks passed!\n\n- Code formatting (Black) ✓\n- Import sorting (isort) ✓\n- Linting (flake8) ✓\n- Type checking (mypy) ✓\n- Unit tests ✓'
            })
